{"version":3,"sources":["js/_pages/home/hero.js"],"names":["heroDiv","element","document","querySelector","size","width","getElementById","offsetWidth","height","offsetHeight","heroSketch","circle","history","yoff","core","setup","createCanvas","Circle","mouseX","mouseY","y","window","scrollY","ballSpeed","draw","background","fill","beginShape","xoff","x","map","noise","vertex","endShape","CLOSE","mouseWheel","windowResized","resizeCanvas","console","log","touchEnd","test","navigator","userAgent","touchMoved","touchEnded","trail","ellipse","splice","length","createVector","push","i","pos","targetX","targetY","speed","p5"],"mappings":"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","file":"hero.js","sourcesContent":["\r\nconst heroDiv = {\r\n    element: document.querySelector('section#hero'),\r\n    size: {\r\n        width: document.getElementById('hero').offsetWidth,\r\n        height: document.getElementById('hero').offsetHeight\r\n    }\r\n}\r\n\r\nlet heroSketch = core => {\r\n\r\n    let circle;\r\n    let history = [];\r\n    let yoff = 0.0; \r\n\r\n    core.setup = () => {\r\n        core.createCanvas(heroDiv.size.width, heroDiv.size.height);\r\n\r\n        circle = new Circle(core.mouseX, core.mouseY);\r\n\r\n        circle.y = window.scrollY + (core.height / 2);\r\n    }\r\n    \r\n\r\n    let ballSpeed = 1;\r\n\r\n    core.draw = () => {\r\n\r\n    \r\n        core.background(255);\r\n\r\n        core.fill(10, 15, 21);\r\n        // We are going to draw a polygon out of the wave points\r\n        core.beginShape();\r\n\r\n        var xoff = 0;       // Option #1: 2D Noise\r\n        // var xoff = yoff; // Option #2: 1D Noise\r\n\r\n        // Iterate over horizontal pixels\r\n        for (var x = 0; x <= core.width; x += 10) {\r\n            // Calculate a y value according to noise, map to \r\n\r\n            // Option #1: 2D Noise\r\n            var y = core.map(core.noise(xoff, yoff), 0, 1, 200, 300);\r\n\r\n            // Option #2: 1D Noise\r\n            // var y = map(noise(xoff), 0, 1, 200,300);\r\n\r\n            // Set the vertex\r\n            core.vertex(x, y);\r\n            // Increment x dimension for noise\r\n            xoff += 0.05;\r\n        }\r\n        // increment y dimension for noise\r\n        yoff += 0.01;\r\n        core.vertex(core.width+200, core.height+10);\r\n        core.vertex(0, core.height + 10);\r\n        core.endShape(core.CLOSE);\r\n    }\r\n\r\n    core.mouseWheel = () => {\r\n\r\n        // alert('a');\r\n    }\r\n\r\n    core.windowResized = () => {\r\n        heroDiv.size.width = document.getElementById('hero').offsetWidth;\r\n        heroDiv.size.height = document.getElementById('hero').offsetHeight;\r\n\r\n        core.resizeCanvas(heroDiv.size.width, heroDiv.size.height);\r\n        console.log(heroDiv.size);\r\n        \r\n    }\r\n\r\n    let touchEnd = false;\r\n\r\n\r\n    if (/Android|webOS|iPhone|iPad|BlackBerry|Windows Phone|Opera Mini|IEMobile|Mobile/i.test(navigator.userAgent)){\r\n\r\n    core.touchMoved = () => {\r\n        touchEnd = false;\r\n    }\r\n\r\n    core.touchEnded = () => {\r\n        \r\n        // circle.history.splice(0, circle.history.length);\r\n        // circle.x = 0;\r\n\r\n        touchEnd = true;\r\n\r\n        console.log(circle.history);\r\n\r\n        // alert('yo');\r\n        \r\n    }\r\n\r\n}\r\n\r\n    class Circle{\r\n\r\n        constructor(x, y){\r\n            this.x = x;\r\n            this.y = y;\r\n\r\n            this.history = [];\r\n            this.trail;\r\n        }\r\n\r\n        draw(){\r\n            core.ellipse(this.x, this.y, 80, 80);\r\n\r\n            // this.goTo(core.mouseX, core.mouseY, 5);\r\n\r\n            \r\n\r\n            if (touchEnd){\r\n                this.history.splice(0, this.history.length);\r\n            }\r\n\r\n            if (this.history.length > 10) {\r\n                this.history.splice(0, 1);\r\n            }\r\n\r\n            \r\n\r\n            \r\n\r\n            this.trail = core.createVector(this.x, this.y);\r\n            this.history.push(this.trail);\r\n\r\n            core.beginShape()\r\n            for (let i = 0; i < this.history.length; i++) {\r\n                let pos = this.history[i];\r\n                // core.ellipse(pos.x, pos.y, 40, 40);\r\n                core.vertex(pos.x, pos.y);\r\n                // core.curveVertex(pos.x, pos.y);\r\n            }\r\n            core.endShape()\r\n\r\n\r\n        }\r\n\r\n        goTo(targetX, targetY, speed){\r\n            if (this.x < targetX) {\r\n                this.x += speed;\r\n            }\r\n            if (this.x > targetX) {\r\n                this.x -= speed;\r\n            }\r\n\r\n            if (this.y < targetY) {\r\n                this.y += speed;\r\n            }\r\n\r\n            if (this.y > targetY) {\r\n                this.y -= speed;\r\n            }\r\n\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nlet test = new p5(heroSketch, 'hero');"]}