{"version":3,"sources":["app.js"],"names":["nav","document","querySelector","navListParrent","navListItems","querySelectorAll","navToggle","firstSection","getOffsetTop","elem","offsetTop","isNaN","offsetParent","b","setAttribute","i","length","classList","add","console","log","remove","navShow","headerShow","window","addEventListener","e","offsetHeight","$","on","event","this","hash","offset","preventDefault","height","animate","scrollTop","top","NoiseSketch","arguments","undefined","section","img","clsp","sketch","p","bgImg","preload","loadImage","setup","createCanvas","width","outerHeight","noLoop","loadPixels","draw","stroke","background","noiseVal","line","BubbleAndNum","x","noise","noiseScale","resizeCanvas","val","pos","y","bgimg","rightWall","objAmount","objSize","size","outerWidth","circles","circleMouse","Circle","innerWidth","BrainImg","random","screen","speedX","speedY","numbers","Text","frameRate","number","update","strokeWeight","noFill","overlapping","other","intersectCircle","windowResized","text","_classCallCheck","noStroke","fill","textSize","fillColor","_createClass","key","value","intersectWall","strokeColor","ellipse","color","d","dist","fd","image","targetY","firstSectionWork","postContentSection","showFirstSketch","p5","aboutSection","skillSection","showAboutSketch","test","workSection","workWrapper","workPaginator","children","groupLength","visible","group","index","updatePaginatorNumbers","num","removeClass","addClass","css","resize","click","active","left","endIndex","setTimeout","previousWork"],"mappings":"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","file":"app.js","sourcesContent":["const nav = document.querySelector('header#top nav.items');\r\nconst navListParrent = document.querySelector('header#top nav ul');\r\nconst navList = document.querySelector('header#top nav ul li');\r\nconst navListItems = document.querySelectorAll('header#top nav ul li a');\r\nconst navToggle = document.querySelector('.nav-toggle');\r\nconst firstSection = document.querySelector('body section');\r\n\r\nlet headerShow = false;\r\n\r\nnav.classList.add('nav-nobg');\r\n\r\nnavToggle.addEventListener('click', () => {\r\n    navShow(headerShow);\r\n    headerShow = !headerShow;\r\n});\r\n\r\nwindow.addEventListener('scroll', e => {\r\n\r\n    if (window.pageYOffset > getOffsetTop(firstSection) - (nav.offsetHeight / 2) &&\r\n        window.pageYOffset < getOffsetTop(firstSection) + firstSection.offsetHeight - (nav.offsetHeight / 2)) {\r\n\r\n        nav.classList.remove('nav-bg');\r\n    }else{\r\n        nav.classList.add('nav-bg');\r\n    }\r\n\r\n    // console.log(firstSection);\r\n    \r\n});\r\n\r\nfunction getOffsetTop(elem) {\r\n    var offsetTop = 0;\r\n    do {\r\n        if (!isNaN(elem.offsetTop)) {\r\n            offsetTop += elem.offsetTop;\r\n        }\r\n    } while (elem = elem.offsetParent);\r\n    return offsetTop;\r\n}\r\n\r\nfunction navShow(b) {\r\n    if (!b) {\r\n        navListParrent.setAttribute('style', `width: 200px;`);\r\n        for (let i = 0; i < navListItems.length; i++ ){\r\n            navListItems[i].setAttribute('style', 'right: 0;');\r\n        }\r\n        // overlay.setAttribute('style', 'display:block; opacity:0.5; z-index:100;');\r\n\r\n        navToggle.classList.add('is-open');\r\n    } else {\r\n        navListParrent.setAttribute('style', `width: 0px;`);\r\n        for (let i = 0; i < navListItems.length; i++) {\r\n            navListItems[i].setAttribute('style', 'right: -200px;');\r\n        }\r\n        console.log('umbau');\r\n        // nav.setAttribute('style', `transform:translateX(${navHideX}px);`)\r\n        // overlay.setAttribute('style', 'display:none; opacity:0; z-index:-100;');\r\n\r\n        navToggle.classList.remove('is-open');\r\n    }\r\n}\r\n\r\n$('body').scrollspy({ target: \"header#top\" });\r\n\r\n$(\"header#top a\").on('click', function (event) {\r\n\r\n\r\n\r\n    if (this.hash !== \"\") {\r\n\r\n        let offset = 0;\r\n\r\n        event.preventDefault();\r\n\r\n        var hash = this.hash;\r\n\r\n        if (hash == \"#work\") {\r\n            offset = ($(hash).height() / 2) - ($(window).height() / 2) + 60;\r\n        }\r\n\r\n        $('html, body').animate({\r\n            scrollTop: $(hash).offset().top + offset\r\n        }, 300, function () {\r\n            // window.location.hash = hash;\r\n        });\r\n\r\n    }\r\n\r\n});\nvar NoiseSketch = function(section, img=null) {\r\n\r\n    this.img = img;\r\n    this.section = section;\r\n    \r\n\r\n    var clsp = this;\r\n    \r\n\r\n    this.sketch = function(p) {\r\n        const section = clsp.section;\r\n        let noiseScale = 0.02;\r\n        let fps;\r\n        let img = clsp.img;\r\n        let bgImg;\r\n        \r\n\r\n        \r\n\r\n        p.preload = () => {\r\n            if (img != null) {\r\n                bgImg = p.loadImage(img);    \r\n            }\r\n        }\r\n\r\n        p.setup = () => {\r\n\r\n            p.createCanvas(section.width(), section.outerHeight());\r\n            if (img != null) {\r\n                bgImg.loadPixels();\r\n            }\r\n            p.noLoop();   \r\n\r\n\r\n            \r\n\r\n        }\r\n\r\n        p.draw = () => {\r\n            p.background(13, 18, 24);\r\n\r\n            if (img != null) {\r\n                p.image(bgImg, 0, 0, section.width(), section.outerHeight());  \r\n            }\r\n            \r\n\r\n            \r\n            \r\n\r\n\r\n            p.stroke(255);\r\n\r\n            for (let x = 0; x < p.width; x++) {\r\n                let noiseVal = p.noise(x * noiseScale, noiseScale * 500);\r\n                p.line(x, (p.height - 50) + noiseVal * 80, x, p.height);\r\n            }\r\n\r\n        }\r\n\r\n        p.windowResized = () => {\r\n            p.resizeCanvas(section.width(), section.outerHeight());\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nvar BubbleAndNum = function (section, val = 10, img = null) {\r\n\r\n    this.section = section;\r\n    this.val = val;\r\n    this.img = img;\r\n\r\n    // console.log(img);\r\n    \r\n\r\n\r\n    this.sketch = function (p) {\r\n        let bgimg;\r\n        \r\n\r\n        let rightWall = {\r\n            pos: {\r\n                x: section.outerWidth() / 2,\r\n                y: 0\r\n            },\r\n            size: {\r\n                width: section.outerWidth() / 2\r\n            }\r\n\r\n        };\r\n\r\n        let circles = [];\r\n        let numbers = [];\r\n\r\n        let objAmount = val;\r\n        let objSize;\r\n\r\n        let circleMouse;\r\n\r\n        p.setup = () => {\r\n            \r\n\r\n            p.createCanvas(section.outerWidth(), section.outerHeight());\r\n\r\n            p.background(255);\r\n\r\n            circleMouse = new Circle(0, 0, 50);\r\n\r\n            if (img != null) {\r\n                if (window.innerWidth <= 480) {\r\n                    bgimg = new BrainImg(img, 0, 0, 200, 170);\r\n                } else {\r\n                    bgimg = new BrainImg(img, 0, 0, 500, 430);\r\n                }   \r\n            }\r\n\r\n            if (screen.width <= 480) {\r\n                objSize = 30;\r\n            } else {\r\n                objSize = 50;\r\n            }\r\n\r\n            // Circles\r\n            for (let i = 0; i < objAmount; i++) {\r\n\r\n                let x = p.random(rightWall.pos.x, (rightWall.pos.x * 2) - 50);\r\n                let y = p.random(0, section.outerHeight());\r\n\r\n                let speedX = p.random(-1.5, 1.5);\r\n                let speedY = p.random(-1.5, 1.5);\r\n\r\n                if (speedX == 0) {\r\n                    speedX = 1;\r\n                }\r\n\r\n                if (speedY == 0) {\r\n                    speedY = 1;\r\n                }\r\n\r\n                circles[i] = new Circle(x, y, objSize, speedX, speedY);\r\n            }\r\n\r\n            // Numbers\r\n            for (let i = 0; i < objAmount; i++) {\r\n                let x = p.random(0, rightWall.pos.x - 50);\r\n                let y = p.random(0, section.outerHeight());\r\n\r\n                let speedX = p.random(-1.5, 1.5);\r\n                let speedY = p.random(-1.5, 1.5);\r\n\r\n                if (speedX == 0) {\r\n                    speedX = 1;\r\n                }\r\n\r\n                if (speedY == 0) {\r\n                    speedY = 1;\r\n                }\r\n\r\n                numbers[i] = new Text(i, x, y, objSize, speedX, speedY);\r\n            }\r\n\r\n            p.frameRate(60);\r\n        }\r\n\r\n        p.draw = () => {\r\n\r\n            p.background(255);\r\n\r\n            if (img != null) {\r\n                bgimg.update();\r\n                bgimg.draw();\r\n            }\r\n            \r\n            \r\n\r\n\r\n\r\n            p.strokeWeight(4);\r\n            p.stroke(156, 205, 207);\r\n\r\n            // Numbers\r\n            for (let i = 0; i < numbers.length; i++) {\r\n                const number = numbers[i];\r\n\r\n                number.update();\r\n                number.draw();\r\n\r\n                // p.fill(0, 255,0);\r\n                // p.ellipse(number.x, number.y, 5, 5);\r\n            }\r\n\r\n            // Circles\r\n            for (let i = 0; i < circles.length; i++) {\r\n\r\n                let overlapping = false;\r\n\r\n                circles[i].noFill();\r\n\r\n                circles[i].update();\r\n                circles[i].draw();\r\n\r\n                for (let other = 0; other < circles.length; other++) {\r\n                    if (i != other && circles[i].intersectCircle(circles[other])) {\r\n                        overlapping = true;\r\n                    }\r\n\r\n                }\r\n\r\n                if (overlapping) {\r\n                    circles[i].stroke([0, 98, 255]);\r\n\r\n                } else {\r\n                    circles[i].stroke([156, 205, 207]);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        p.windowResized = () => {\r\n\r\n            if (window.innerWidth <= 480) {\r\n                objAmount = 5;\r\n                objSize = 30;\r\n            } else {\r\n                objAmount = 10;\r\n                objSize = 50;\r\n            }\r\n\r\n            rightWall = {\r\n                pos: {\r\n                    x: section.outerWidth() / 2,\r\n                    y: 0\r\n                },\r\n                size: {\r\n                    width: section.outerWidth() / 2\r\n                }\r\n\r\n            };\r\n\r\n            if (window.innerWidth <= 480) {\r\n                BrainImg.width = 200;\r\n                BrainImg.height = 170;\r\n            } else {\r\n                BrainImg.width = 500;\r\n                BrainImg.height = 430;\r\n            }\r\n\r\n            if (window.innerWidth >= 1200) {\r\n                BrainImg.width = 700;\r\n                BrainImg.height = 630;\r\n            }\r\n\r\n            p.resizeCanvas(section.outerWidth(), section.outerHeight());\r\n        }\r\n\r\n        class Text {\r\n            constructor(text, x, y, size, speedX = 2, speedY = 2) {\r\n                this.text = text;\r\n\r\n                this.x = x + 50;\r\n                this.y = y + 50;\r\n\r\n                this.size = size;\r\n\r\n                this.speedX = speedX;\r\n                this.speedY = speedY;\r\n\r\n                this.fillColor = [156, 205, 207];\r\n            }\r\n\r\n            draw() {\r\n                p.noStroke();\r\n\r\n                p.fill(this.fillColor);\r\n                p.textSize(this.size);\r\n                p.text(this.text, this.x, this.y);\r\n\r\n            }\r\n\r\n            update() {\r\n                this.x += this.speedX;\r\n                this.y += this.speedY;\r\n\r\n                this.intersectWall();\r\n            }\r\n\r\n            intersectWall() {\r\n                if (this.x >= rightWall.pos.x - (this.size / 2)) {\r\n                    this.x = rightWall.pos.x - (this.size / 2);\r\n                    this.speedX *= -1;\r\n                }\r\n\r\n                if (this.x <= 0) {\r\n                    this.x = 0;\r\n                    this.speedX *= -1;\r\n\r\n                    // this.fillColor = [255, 0, 0];\r\n                }\r\n\r\n                if (this.y >= p.height) {\r\n                    this.y = p.height;\r\n                    this.speedY *= -1;\r\n                }\r\n\r\n                if (this.y - this.size <= 0) {\r\n                    this.y = this.size;\r\n                    this.speedY *= -1;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        class Circle {\r\n            constructor(x, y, size, speedX = 2, speedY = 2) {\r\n                this.x = x + 50;\r\n                this.y = y + 50;\r\n\r\n                this.size = size;\r\n\r\n                this.speedX = speedX;\r\n                this.speedY = speedY;\r\n\r\n                this.fillColor = 0;\r\n                this.strokeColor = 0;\r\n            }\r\n\r\n            draw() {\r\n                p.stroke(this.strokeColor);\r\n                if (this.noFill) {\r\n                    p.noFill();\r\n                } else {\r\n                    p.fill(this.fillColor);\r\n                }\r\n\r\n                p.ellipse(this.x, this.y, this.size, this.size);\r\n\r\n            }\r\n\r\n            update() {\r\n                this.x += this.speedX;\r\n                this.y += this.speedY;\r\n\r\n                this.intersectWall();\r\n            }\r\n\r\n            noFill(b) {\r\n                return b;\r\n            }\r\n\r\n            fill(color) {\r\n                this.fillColor = color;\r\n            }\r\n\r\n            stroke(color) {\r\n                this.strokeColor = color;\r\n            }\r\n\r\n            intersectCircle(other) {\r\n                let d = p.dist(this.x, this.y, other.x, other.y);\r\n                let fd = (this.size / 2) + (other.size / 2);\r\n\r\n                return d < fd;\r\n            }\r\n\r\n            intersectWall() {\r\n                if (this.x >= p.width - (this.size / 2)) {\r\n                    this.x = p.width - (this.size / 2);\r\n                    this.speedX = this.speedX * -1;\r\n                }\r\n\r\n                if (this.x <= rightWall.pos.x + (this.size / 2)) {\r\n                    this.x = rightWall.pos.x + this.size / 2;\r\n                    this.speedX = this.speedX * -1;\r\n                }\r\n\r\n                if (this.y >= p.height - (this.size / 2)) {\r\n                    this.y = p.height - (this.size / 2);\r\n                    this.speedY = this.speedY * -1;\r\n                }\r\n\r\n                if (this.y <= this.size / 2) {\r\n                    this.y = this.size / 2;\r\n                    this.speedY = this.speedY * -1;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        class BrainImg {\r\n            constructor(img, x, y, width, height) {\r\n                this.img = p.loadImage(img);\r\n\r\n                this.x = x;\r\n                this.y = y;\r\n\r\n                this.width = width;\r\n                this.height = height;\r\n            }\r\n\r\n            draw() {\r\n                p.image(this.img, this.x, this.y, this.width, this.height);\r\n                // console.log(this.img);\r\n                \r\n            }\r\n\r\n            update() {\r\n                this.x = (p.width / 2) - (this.width / 2);\r\n                this.y = (p.height / 2) - (this.height / 2);\r\n            }\r\n\r\n            followY(targetY, speedY) {\r\n                if (this.y < targetY) {\r\n                    this.y += speedY;\r\n                }\r\n\r\n                if (this.y > targetY) {\r\n                    this.y -= speedY;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\n// work sketch\r\n\r\nlet firstSectionWork = $('section#first');\r\nlet postContentSection = $('section#post-content');\r\n\r\n\r\n\r\n\r\nif (firstSectionWork.length) {\r\n    let showFirstSketch = new NoiseSketch(firstSectionWork, '/img/particles.jpg').sketch;\r\n\r\n    let showFirstSketch2 = new p5(showFirstSketch, 'first');\r\n}\r\n\r\nif (postContentSection.length && $(window).width() > 960) {\r\n\r\n    let objTotal = 10;\r\n\r\n    let test = new BubbleAndNum(postContentSection, objTotal);\r\n    \r\n    // let showPostSketch2 = new p5(test.sketch, 'post-content');\r\n}\r\n\r\n\nconst sectionWork = document.querySelector('section#work');\r\nconst workArticles = document.querySelectorAll('section#work article');\r\n\r\n\r\n// for (let i = 0; i < workArticles.length; i++) {\r\n//     const article = workArticles[i];\r\n    \r\n//     const title = document.querySelector(`article.${article.classList}`);\r\n    \r\n\r\n//     article.addEventListener('mouseover', () => {\r\n//         title.classList.add('article-hover');\r\n//     });\r\n\r\n//     article.addEventListener('mouseleave', () => {\r\n//         title.classList.remove('article-hover');\r\n//     });\r\n\r\n// }\r\n\n// work sketch\r\n\r\nlet aboutSection = $('section#about');\r\nlet skillSection = $('section#skill');\r\n\r\nif (aboutSection.length) {\r\n    let showAboutSketch = new NoiseSketch(aboutSection, '/img/particles.jpg').sketch;\r\n\r\n    let showAboutSketch2 = new p5(showAboutSketch, 'about');\r\n}\r\n\r\n\r\nif (skillSection.length) {\r\n\r\n    let objTotal = 7;\r\n\r\n    if($(window).width() < 960){\r\n        objTotal = 4;\r\n        \r\n    }\r\n\r\n    let test = new BubbleAndNum(skillSection, 7, '/img/white-brain.jpg');\r\n\r\n    let skillSectionSketch2 = new p5(test.sketch, 'skill');\r\n}\r\n\r\n\n\r\nconst workSection = $('section#work');\r\nconst workWrapper = $('.work-wrapper');\r\nconst group = $('.work-group');\r\nconst workPaginator = $('.work-paginator');\r\n\r\nlet groupLength = workWrapper.children().length;\r\nlet visible = 1;\r\nlet index = 0;\r\nlet endIndex = (group.length / visible) - 1;\r\nlet active = true;\r\n\r\n\r\n\r\n\r\n\r\nfor (let i = 0; i < groupLength; i++) {\r\n    $('.work-paginator ul')\r\n    .append(`\r\n    <li><a>${i + 1}</a></li>\r\n    `);\r\n}\r\n\r\n    workPaginator.css('top', `-${(workSection.height() / 2) - 70}px`);\r\n\r\n    $(window).resize(function(){\r\n        workPaginator.css('top', `-${(workSection.height() / 2) - 70}px`);\r\n    })\r\n\r\n    updatePaginatorNumbers(1);  \r\n\r\n    $('.work-paginator ul li').click(function () {\r\n        updatePaginatorNumbers($(this).index() + 1);\r\n        \r\n        index = $(this).index();\r\n        leftWork(`-${group.width() * (index)}px`);\r\n\r\n    });\r\n    \r\n\r\n    $('.work-paginator .icon-arrow-left').click(() => {\r\n\r\n        if (active) {\r\n            active = false;\r\n\r\n            if (index > 0) {\r\n                previousWork();\r\n            } else {\r\n                endWork();\r\n            }\r\n\r\n            window.setTimeout(function () {\r\n                active = true;\r\n            }, 300);\r\n        }\r\n\r\n        \r\n\r\n        updatePaginatorNumbers(index + 1);\r\n    });\r\n\r\n    $('.work-paginator .icon-arrow-right').click(() => {\r\n\r\n\r\n        if (active) {\r\n            active = false;\r\n            if (index < endIndex) {\r\n                nextWork();\r\n            } else {\r\n                startWork();\r\n            }\r\n\r\n            window.setTimeout(function () {\r\n                active = true;\r\n            }, 300);\r\n        }\r\n        \r\n\r\n        updatePaginatorNumbers(index + 1);\r\n    });\r\n\r\n    function leftWork(pos) {\r\n        group.css({ 'left': pos });\r\n        \r\n    }\r\n\r\n    function previousWork() {\r\n        index--;\r\n        group.css({ 'left': `+=${group.width()}` });\r\n    }\r\n\r\n    function nextWork() {\r\n       \r\n        index++;\r\n        group.css({ 'left': `-=${group.width()}` });  \r\n \r\n    }\r\n\r\n    function startWork() {\r\n        index = 0;\r\n        group.css({ 'left': '0px' });\r\n    }\r\n\r\n    function endWork() {\r\n        index = endIndex;\r\n        group.css({ 'left': `-${group.width() * (groupLength - 1)}px` });\r\n        \r\n    }\r\n\r\n    function updatePaginatorNumbers(i) {\r\n        const num = $(`.work-paginator ul li:nth-child(${i})`);\r\n\r\n        $('.work-paginator ul li').removeClass('selected');\r\n\r\n        num.addClass('selected');\r\n    }\r\n\r\n\r\n\n"]}