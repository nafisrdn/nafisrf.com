{"version":3,"sources":["app.js"],"names":["$","document","ready","querySelectorAll","forEach","anchor","addEventListener","e","preventDefault","this","getAttribute","scrollIntoView","nav","querySelector","navListParrent","navList","navListItems","getOffsetTop","elem","offsetTop","navShow","b","navToggle","classList","i","length","setAttribute","remove","add","firstSection","headerShow","window","pageYOffset","offsetHeight","id","size","getElementById","width","height","offsetWidth","aboutSketch","fps","preload","p","bgImg","loadImage","loadPixels","noLoop","aboutSection","image","background","line","x","noiseVal","noise","noiseScale","windowResized","sectionWork","showAboutSketch","p5","workArticles","skillSection","skillSketch","brain","y","rightWall","pos","numbers","circles","setup","objSize","Circle","objAmount","BrainImg","screen","random","speedX","speedY","frameRate","Text","strokeWeight","update","draw","number","overlapping","other","noFill","stroke","intersectCircle","innerWidth","resizeCanvas","text","arguments","undefined","_classCallCheck","fillColor","_createClass","key","value","noStroke","fill","textSize","intersectWall","strokeColor","ellipse","color","dist","d","fd","img","targetY","showSkillSketch","workSection","workWrapper","group","workPaginator","groupLength","visible","index","endIndex","append","removeClass","animate","updatePaginatorNumbers","left","click"],"mappings":"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","file":"app.js","sourcesContent":["\r\n\r\n$(document).ready(function() {\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n});\nconst nav = document.querySelector('header#top nav.items');\r\nconst navListParrent = document.querySelector('header#top nav ul');\r\nconst navList = document.querySelector('header#top nav ul li');\r\nconst navListItems = document.querySelectorAll('header#top nav ul li a');\r\nconst navToggle = document.querySelector('.nav-toggle');\r\nconst firstSection = document.querySelector('body section');\r\n\r\nlet headerShow = false;\r\n\r\nnav.classList.add('nav-nobg');\r\n\r\nnavToggle.addEventListener('click', () => {\r\n    navShow(headerShow);\r\n    headerShow = !headerShow;\r\n});\r\n\r\nwindow.addEventListener('scroll', e => {\r\n\r\n    if (window.pageYOffset > getOffsetTop(firstSection) - (nav.offsetHeight / 2) &&\r\n        window.pageYOffset < getOffsetTop(firstSection) + firstSection.offsetHeight - (nav.offsetHeight / 2)) {\r\n\r\n        nav.classList.remove('nav-bg');\r\n    }else{\r\n        nav.classList.add('nav-bg');\r\n    }\r\n\r\n    // console.log(firstSection);\r\n    \r\n});\r\n\r\nfunction getOffsetTop(elem) {\r\n    var offsetTop = 0;\r\n    do {\r\n        if (!isNaN(elem.offsetTop)) {\r\n            offsetTop += elem.offsetTop;\r\n        }\r\n    } while (elem = elem.offsetParent);\r\n    return offsetTop;\r\n}\r\n\r\nfunction navShow(b) {\r\n    if (!b) {\r\n        navListParrent.setAttribute('style', `width: 200px;`);\r\n        for (let i = 0; i < navListItems.length; i++ ){\r\n            navListItems[i].setAttribute('style', 'right: 0;');\r\n        }\r\n        // overlay.setAttribute('style', 'display:block; opacity:0.5; z-index:100;');\r\n\r\n        navToggle.classList.add('is-open');\r\n    } else {\r\n        navListParrent.setAttribute('style', `width: 0px;`);\r\n        for (let i = 0; i < navListItems.length; i++) {\r\n            navListItems[i].setAttribute('style', 'right: -200px;');\r\n        }\r\n        console.log('umbau');\r\n        // nav.setAttribute('style', `transform:translateX(${navHideX}px);`)\r\n        // overlay.setAttribute('style', 'display:none; opacity:0; z-index:-100;');\r\n\r\n        navToggle.classList.remove('is-open');\r\n    }\r\n\r\n\r\n\r\n\r\n}\nlet aboutSection = {\r\n    e: document.getElementById('about'),\r\n    id: 'about',\r\n    size: {\r\n        width: document.getElementById('about').offsetWidth,\r\n        height: document.getElementById('about').offsetHeight\r\n    }\r\n}\r\n\r\nlet aboutSketch = p => {\r\n    let noiseScale = 0.02;\r\n    let fps;\r\n    let bgImg;\r\n\r\n    p.preload = () => {\r\n        bgImg = p.loadImage('/img/particles.jpg');\r\n    }\r\n\r\n    p.setup = () => {\r\n        p.createCanvas(aboutSection.size.width, aboutSection.size.height);\r\n        bgImg.loadPixels();\r\n        p.noLoop();\r\n        \r\n    }\r\n\r\n    p.draw = () => {\r\n        p.background(13, 18, 24);\r\n\r\n        p.image(bgImg, 0, 0, aboutSection.size.width, aboutSection.size.height);\r\n\r\n\r\n        p.stroke(255);\r\n\r\n        for (let x = 0; x < p.width; x++) {\r\n            let noiseVal = p.noise(x * noiseScale, noiseScale * 500);\r\n            p.line(x,  (p.height - 50) + noiseVal * 80, x, p.height);\r\n        }\r\n\r\n    }\r\n\r\n    p.windowResized = () => {\r\n        aboutSection.size.width = aboutSection.e.offsetWidth;\r\n        aboutSection.size.height = aboutSection.e.offsetHeight;\r\n\r\n        p.resizeCanvas(aboutSection.size.width, aboutSection.size.height);\r\n        \r\n    }\r\n}\r\n\r\nlet showAboutSketch = new p5(aboutSketch, aboutSection.id);\nconst sectionWork = document.querySelector('section#work');\r\nconst workArticles = document.querySelectorAll('section#work article');\r\n\r\n\r\n// for (let i = 0; i < workArticles.length; i++) {\r\n//     const article = workArticles[i];\r\n    \r\n//     const title = document.querySelector(`article.${article.classList}`);\r\n    \r\n\r\n//     article.addEventListener('mouseover', () => {\r\n//         title.classList.add('article-hover');\r\n//     });\r\n\r\n//     article.addEventListener('mouseleave', () => {\r\n//         title.classList.remove('article-hover');\r\n//     });\r\n\r\n// }\r\n\n\r\nlet skillSection = {\r\n    e: document.getElementById('skill'),\r\n    id: 'skill',\r\n    size:{\r\n        width: document.getElementById('skill').offsetWidth,\r\n        height: document.getElementById('skill').offsetHeight\r\n    }\r\n}\r\n\r\nlet skillSketch = function(p){\r\n\r\n    let brain;\r\n\r\n    let rightWall = {\r\n        pos: {\r\n            x: skillSection.e.offsetWidth / 2,\r\n            y: 0\r\n        },\r\n        size: {\r\n            width: skillSection.e.offsetWidth / 2\r\n        }\r\n\r\n    };\r\n\r\n    let circles = [];\r\n    let numbers = [];\r\n\r\n    let objAmount;\r\n    let objSize;\r\n\r\n    let circleMouse;\r\n\r\n    p.setup = () => {\r\n\r\n        p.createCanvas(skillSection.e.offsetWidth, skillSection.e.offsetHeight);\r\n\r\n        p.background(255);\r\n\r\n        circleMouse = new Circle(0, 0, 50);\r\n        \r\n        if (window.innerWidth <= 480){\r\n            brain = new BrainImg(p.loadImage('/img/white-brain.jpg'), 0, 0, 200, 170);\r\n        }else{\r\n            brain = new BrainImg(p.loadImage('/img/white-brain.jpg'),0, 0, 500, 430);\r\n        }\r\n\r\n        if (screen.width <= 480) {\r\n            objAmount = 4;\r\n            objSize = 30;\r\n        }else{\r\n            objAmount = 4;\r\n            objSize = 50;\r\n        }\r\n\r\n        // Circles\r\n        for (let i = 0; i < objAmount; i++){\r\n\r\n            let x = p.random(rightWall.pos.x, (rightWall.pos.x * 2) - 50);\r\n            let y = p.random(0, skillSection.e.offsetHeight);\r\n\r\n            let speedX = p.random(-1.5, 1.5);\r\n            let speedY = p.random(-1.5, 1.5);\r\n\r\n            if (speedX == 0){\r\n                speedX = 1;\r\n            }\r\n\r\n            if (speedY == 0){\r\n                speedY = 1;\r\n            }\r\n\r\n            circles[i] = new Circle(x, y, objSize, speedX, speedY);\r\n        }\r\n\r\n        // Numbers\r\n        for (let i = 0; i < objAmount; i++){\r\n            let x = p.random(0, rightWall.pos.x - 50);\r\n            let y = p.random(0, skillSection.e.offsetHeight);\r\n\r\n            let speedX = p.random(-1.5, 1.5);\r\n            let speedY = p.random(-1.5, 1.5);\r\n\r\n            if (speedX == 0) {\r\n                speedX = 1;\r\n            }\r\n\r\n            if (speedY == 0) {\r\n                speedY = 1;\r\n            }\r\n\r\n            numbers[i] = new Text(i, x, y, objSize, speedX, speedY);\r\n        }\r\n\r\n        p.frameRate(60);\r\n    }\r\n\r\n    p.draw = () => {\r\n\r\n        p.background(255);\r\n\r\n        brain.update();\r\n        brain.draw();\r\n\r\n        \r\n\r\n        p.strokeWeight(4);\r\n        p.stroke(156, 205, 207);\r\n\r\n        // circleMouse.draw();\r\n\r\n        // Numbers\r\n        for (let i = 0; i < numbers.length; i++) {\r\n            const number = numbers[i];\r\n\r\n            number.update();\r\n            number.draw();\r\n\r\n            // p.fill(0, 255,0);\r\n            // p.ellipse(number.x, number.y, 5, 5);\r\n        }\r\n\r\n        // Circles\r\n        for (let i = 0; i < circles.length; i++){\r\n\r\n            let overlapping = false;\r\n\r\n            circles[i].noFill();\r\n\r\n            circles[i].update();\r\n            circles[i].draw();\r\n\r\n            for (let other = 0; other < circles.length; other++){\r\n                if (i != other && circles[i].intersectCircle(circles[other])){\r\n                    overlapping = true;\r\n                }\r\n                \r\n            }\r\n\r\n            if (overlapping) {\r\n                circles[i].stroke([0, 98, 255]);\r\n\r\n            } else {\r\n                circles[i].stroke([156, 205, 207]);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    p.windowResized = () => {\r\n\r\n        if (window.innerWidth <= 480) {\r\n            objAmount = 5;\r\n        } else {\r\n            objAmount = 10;\r\n        }\r\n        \r\n\r\n        rightWall = {\r\n            pos: {\r\n                x: skillSection.e.offsetWidth / 2,\r\n                y: 0\r\n            },\r\n            size: {\r\n                width: skillSection.e.offsetWidth / 2\r\n            }\r\n\r\n        };\r\n\r\n        if (window.innerWidth <= 480) {\r\n            brain.width = 200;\r\n            brain.height = 170;\r\n        } else {\r\n            brain.width = 500;\r\n            brain.height = 430;\r\n        }\r\n\r\n        if (window.innerWidth >= 1200){\r\n            brain.width = 700;\r\n            brain.height = 630;\r\n        }\r\n\r\n        p.resizeCanvas(skillSection.e.offsetWidth, skillSection.e.offsetHeight);\r\n    }\r\n\r\n    class Text {\r\n        constructor(text, x, y, size, speedX = 2, speedY = 2) {\r\n            this.text = text;\r\n\r\n            this.x = x + 50;\r\n            this.y = y + 50;\r\n\r\n            this.size = size;\r\n\r\n            this.speedX = speedX;\r\n            this.speedY = speedY;\r\n\r\n            this.fillColor = [156, 205, 207];\r\n        }\r\n\r\n        draw() {\r\n            p.noStroke();\r\n\r\n            p.fill(this.fillColor);\r\n            p.textSize(this.size);\r\n            p.text(this.text, this.x, this.y);\r\n\r\n        }\r\n\r\n        update() {\r\n            this.x += this.speedX;\r\n            this.y += this.speedY;\r\n\r\n            this.intersectWall();\r\n        }\r\n\r\n        intersectWall() {\r\n            if (this.x >= rightWall.pos.x - (this.size / 2)) {\r\n                this.x = rightWall.pos.x - (this.size / 2);\r\n                this.speedX *= -1;\r\n            }\r\n\r\n            if (this.x <= 0) {\r\n                this.x = 0;\r\n                this.speedX *= -1;\r\n\r\n                // this.fillColor = [255, 0, 0];\r\n            }\r\n\r\n            if (this.y >= p.height) {\r\n                this.y = p.height;\r\n                this.speedY *=  -1;\r\n            }\r\n\r\n            if (this.y - this.size <= 0) {\r\n                this.y = this.size;\r\n                this.speedY *= -1;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    class Circle{\r\n        constructor(x, y, size, speedX=2, speedY=2){\r\n            this.x = x + 50;\r\n            this.y = y + 50;\r\n            \r\n            this.size = size;\r\n            \r\n            this.speedX = speedX;\r\n            this.speedY = speedY;\r\n\r\n            this.fillColor = 0;\r\n            this.strokeColor = 0;\r\n        }\r\n\r\n        draw(){\r\n            p.stroke(this.strokeColor);\r\n            if (this.noFill){\r\n                p.noFill();\r\n            }else{\r\n                p.fill(this.fillColor);\r\n            }\r\n\r\n            p.ellipse(this.x, this.y, this.size, this.size);\r\n            \r\n        }\r\n\r\n        update(){\r\n            this.x += this.speedX;\r\n            this.y += this.speedY;\r\n\r\n            this.intersectWall();\r\n        }\r\n\r\n        noFill(b){\r\n            return b;\r\n        }\r\n\r\n        fill(color){\r\n            this.fillColor = color;\r\n        }\r\n\r\n        stroke(color){\r\n            this.strokeColor = color;\r\n        }\r\n\r\n        intersectCircle(other){\r\n            let d = p.dist(this.x, this.y, other.x, other.y);\r\n            let fd = (this.size / 2) + (other.size /2);\r\n\r\n            return d < fd; \r\n        }\r\n\r\n        intersectWall(){\r\n            if (this.x >= p.width - (this.size / 2)) {\r\n                this.x = p.width - (this.size / 2);\r\n                this.speedX = this.speedX * -1;\r\n            }\r\n\r\n            if (this.x <= rightWall.pos.x + (this.size / 2)) {\r\n                this.x = rightWall.pos.x + this.size / 2;\r\n                this.speedX = this.speedX * -1;\r\n            }\r\n\r\n            if (this.y >= p.height - (this.size / 2)) {\r\n                this.y = p.height - (this.size / 2);\r\n                this.speedY = this.speedY * -1;\r\n            }\r\n\r\n            if (this.y <= this.size / 2) {\r\n                this.y = this.size / 2;\r\n                this.speedY = this.speedY * -1;\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    class BrainImg {\r\n        constructor(img, x, y, width, height) {\r\n            this.img = img;\r\n\r\n            this.x = x;\r\n            this.y = y;\r\n\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n\r\n        draw() {\r\n            p.image(this.img, this.x, this.y, this.width, this.height);\r\n        }\r\n\r\n        update() {\r\n            this.x = (p.width / 2) - (this.width / 2);\r\n            this.y = (p.height / 2) - (this.height / 2);\r\n        }\r\n\r\n        followY(targetY, speedY) {\r\n            if (this.y < targetY) {\r\n                this.y += speedY;\r\n            }\r\n\r\n            if (this.y > targetY) {\r\n                this.y -= speedY;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet showSkillSketch = new p5(skillSketch, skillSection.id);\n\r\nconst workSection = $('section#work');\r\nconst workWrapper = $('.work-wrapper');\r\nconst group = $('.work-group');\r\nconst workPaginator = $('.work-paginator');\r\n\r\nlet groupLength = workWrapper.children().length;\r\nlet visible = 1;\r\nlet index = 0;\r\nlet endIndex = (group.length / visible) - 1;\r\n\r\n\r\n\r\n\r\n\r\n\r\nfor (let i = 0; i < groupLength; i++) {\r\n    $('.work-paginator ul')\r\n    .append(`\r\n    <li><a href='#work'>${i + 1}</a></li>\r\n    `);\r\n}\r\n\r\n$(document).ready(function() {\r\n    workPaginator.css('top', `-${(workSection.height() / 2) - 70}px`);\r\n    // console.log(workSection.height());\r\n\r\n    updatePaginatorNumbers(1);\r\n\r\n    $('.work-paginator ul li').click(function () {\r\n        updatePaginatorNumbers($(this).index() + 1);\r\n        index = $(this).index();\r\n        group.animate({ 'left': `-${group.width() * (index)}` });\r\n\r\n    });\r\n\r\n    $('.work-paginator .icon-arrow-left').click(() => {\r\n        if (index > 0) {\r\n            index--;\r\n            group.animate({ 'left': `+=${group.width()}` });\r\n        } else {\r\n            index = endIndex;\r\n            group.animate({ 'left': `-${group.width() * (groupLength - 1)}` });\r\n        }\r\n\r\n        updatePaginatorNumbers(index + 1);\r\n    });\r\n\r\n    $('.work-paginator .icon-arrow-right').click(() => {\r\n        if (index < endIndex) {\r\n            index++;\r\n            group.animate({ 'left': `-=${group.width()}` });\r\n        } else {\r\n            index = 0;\r\n            group.animate({ 'left': '0px' });\r\n        }\r\n\r\n        updatePaginatorNumbers(index + 1);\r\n    });\r\n\r\n    function updatePaginatorNumbers(i) {\r\n        const num = $(`.work-paginator ul li:nth-child(${i})`);\r\n\r\n        $('.work-paginator ul li').removeClass('selected');\r\n\r\n        num.addClass('selected');\r\n    }\r\n\r\n});\r\n\r\n"]}