{"version":3,"sources":["app.js"],"names":["nav","document","querySelector","navListParrent","navListItems","querySelectorAll","navToggle","firstSection","getOffsetTop","elem","offsetTop","isNaN","offsetParent","b","setAttribute","i","length","classList","add","console","log","remove","navShow","headerShow","window","addEventListener","e","offsetHeight","$","on","event","this","hash","speed","offset","preventDefault","height","animate","scrollTop","top","NoiseSketch","arguments","undefined","section","img","clsp","sketch","p","bgImg","preload","loadImage","setup","createCanvas","width","outerHeight","noLoop","loadPixels","draw","stroke","background","noiseVal","line","BubbleAndNum","x","noise","noiseScale","resizeCanvas","val","pos","y","bgimg","rightWall","objAmount","objSize","size","outerWidth","circles","circleMouse","Circle","innerWidth","BrainImg","random","screen","speedX","speedY","numbers","Text","frameRate","number","update","strokeWeight","noFill","overlapping","other","intersectCircle","windowResized","text","_classCallCheck","noStroke","fill","textSize","fillColor","_createClass","key","value","intersectWall","strokeColor","ellipse","color","d","dist","fd","image","targetY","aboutSection","skillSection","showAboutSketch","p5","test","workSection","workWrapper","group","workPaginator","groupLength","children","endIndex","visible","active","append","updatePaginatorNumbers","firstSectionWork","removeClass","showFirstSketch","css","resize","click","index","leftWork","left","addClass","setTimeout","startWork","postContentSection"],"mappings":"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","file":"app.js","sourcesContent":["const nav = document.querySelector('header#top nav.items');\r\nconst navListParrent = document.querySelector('header#top nav ul');\r\nconst navList = document.querySelector('header#top nav ul li');\r\nconst navListItems = document.querySelectorAll('header#top nav ul li a');\r\nconst navToggle = document.querySelector('.nav-toggle');\r\nconst firstSection = document.querySelector('body section');\r\n\r\nlet headerShow = false;\r\n\r\nnav.classList.add('nav-nobg');\r\n\r\nnavToggle.addEventListener('click', () => {\r\n    navShow(headerShow);\r\n    headerShow = !headerShow;\r\n});\r\n\r\nwindow.addEventListener('scroll', e => {\r\n\r\n    if (window.pageYOffset > getOffsetTop(firstSection) - (nav.offsetHeight / 2) &&\r\n        window.pageYOffset < getOffsetTop(firstSection) + firstSection.offsetHeight - (nav.offsetHeight / 2)) {\r\n\r\n        nav.classList.remove('nav-bg');\r\n    }else{\r\n        nav.classList.add('nav-bg');\r\n    }\r\n\r\n    // console.log(firstSection);\r\n    \r\n});\r\n\r\nfunction getOffsetTop(elem) {\r\n    var offsetTop = 0;\r\n    do {\r\n        if (!isNaN(elem.offsetTop)) {\r\n            offsetTop += elem.offsetTop;\r\n        }\r\n    } while (elem = elem.offsetParent);\r\n    return offsetTop;\r\n}\r\n\r\nfunction navShow(b) {\r\n    if (!b) {\r\n        navListParrent.setAttribute('style', `width: 200px;`);\r\n        for (let i = 0; i < navListItems.length; i++ ){\r\n            navListItems[i].setAttribute('style', 'right: 0;');\r\n        }\r\n        // overlay.setAttribute('style', 'display:block; opacity:0.5; z-index:100;');\r\n\r\n        navToggle.classList.add('is-open');\r\n    } else {\r\n        navListParrent.setAttribute('style', `width: 0px;`);\r\n        for (let i = 0; i < navListItems.length; i++) {\r\n            navListItems[i].setAttribute('style', 'right: -200px;');\r\n        }\r\n        console.log('umbau');\r\n        // nav.setAttribute('style', `transform:translateX(${navHideX}px);`)\r\n        // overlay.setAttribute('style', 'display:none; opacity:0; z-index:-100;');\r\n\r\n        navToggle.classList.remove('is-open');\r\n    }\r\n}\r\n\r\n$('body').scrollspy({ target: \"header#top\" });\r\n\r\n$(\"header#top a\").on('click', function (event) {\r\n\r\n\r\n\r\n    if (this.hash !== \"\") {\r\n\r\n        let speed = 600;\r\n        let offset = 0;\r\n\r\n        event.preventDefault();\r\n\r\n        var hash = this.hash;\r\n\r\n        if (hash == \"#work\") {\r\n            offset = ($(hash).height() / 2) - ($(window).height() / 2) + 60;\r\n        }\r\n\r\n        if (hash == \"#contact\") {\r\n            offset = 999;\r\n            speed = 800;\r\n        }\r\n\r\n        $('html, body').animate({\r\n            scrollTop: $(hash).offset().top + offset\r\n        }, speed, function () {\r\n            // window.location.hash = hash;\r\n        });\r\n\r\n    }\r\n\r\n});\nvar NoiseSketch = function(section, img=null) {\r\n\r\n    this.img = img;\r\n    this.section = section;\r\n    \r\n\r\n    var clsp = this;\r\n    \r\n\r\n    this.sketch = function(p) {\r\n        const section = clsp.section;\r\n        let noiseScale = 0.02;\r\n        let fps;\r\n        let img = clsp.img;\r\n        let bgImg;\r\n        \r\n\r\n        \r\n\r\n        p.preload = () => {\r\n            if (img != null) {\r\n                bgImg = p.loadImage(img);    \r\n            }\r\n        }\r\n\r\n        p.setup = () => {\r\n\r\n            p.createCanvas(section.width(), section.outerHeight());\r\n            if (img != null) {\r\n                bgImg.loadPixels();\r\n            }\r\n            p.noLoop();   \r\n\r\n\r\n            \r\n\r\n        }\r\n\r\n        p.draw = () => {\r\n            p.background(13, 18, 24);\r\n\r\n            if (img != null) {\r\n                p.image(bgImg, 0, 0, section.width(), section.outerHeight());  \r\n            }\r\n            \r\n\r\n            \r\n            \r\n\r\n\r\n            p.stroke(255);\r\n\r\n            for (let x = 0; x < p.width; x++) {\r\n                let noiseVal = p.noise(x * noiseScale, noiseScale * 500);\r\n                p.line(x, (p.height - 50) + noiseVal * 80, x, p.height);\r\n            }\r\n\r\n        }\r\n\r\n        p.windowResized = () => {\r\n            p.resizeCanvas(section.width(), section.outerHeight());\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nvar BubbleAndNum = function (section, val = 10, img = null) {\r\n\r\n    this.section = section;\r\n    this.val = val;\r\n    this.img = img;\r\n\r\n    // console.log(img);\r\n    \r\n\r\n\r\n    this.sketch = function (p) {\r\n        let bgimg;\r\n        \r\n\r\n        let rightWall = {\r\n            pos: {\r\n                x: section.outerWidth() / 2,\r\n                y: 0\r\n            },\r\n            size: {\r\n                width: section.outerWidth() / 2\r\n            }\r\n\r\n        };\r\n\r\n        let circles = [];\r\n        let numbers = [];\r\n\r\n        let objAmount = val;\r\n        let objSize;\r\n\r\n        let circleMouse;\r\n\r\n        p.setup = () => {\r\n            \r\n\r\n            p.createCanvas(section.outerWidth(), section.outerHeight());\r\n\r\n            p.background(255);\r\n\r\n            circleMouse = new Circle(0, 0, 50);\r\n\r\n            if (img != null) {\r\n                if (window.innerWidth <= 480) {\r\n                    bgimg = new BrainImg(img, 0, 0, 200, 170);\r\n                } else {\r\n                    bgimg = new BrainImg(img, 0, 0, 500, 430);\r\n                }   \r\n            }\r\n\r\n            if (screen.width <= 480) {\r\n                objSize = 30;\r\n            } else {\r\n                objSize = 50;\r\n            }\r\n\r\n            // Circles\r\n            for (let i = 0; i < objAmount; i++) {\r\n\r\n                let x = p.random(rightWall.pos.x, (rightWall.pos.x * 2) - 50);\r\n                let y = p.random(0, section.outerHeight());\r\n\r\n                let speedX = p.random(-1.5, 1.5);\r\n                let speedY = p.random(-1.5, 1.5);\r\n\r\n                if (speedX == 0) {\r\n                    speedX = 1;\r\n                }\r\n\r\n                if (speedY == 0) {\r\n                    speedY = 1;\r\n                }\r\n\r\n                circles[i] = new Circle(x, y, objSize, speedX, speedY);\r\n            }\r\n\r\n            // Numbers\r\n            for (let i = 0; i < objAmount; i++) {\r\n                let x = p.random(0, rightWall.pos.x - 50);\r\n                let y = p.random(0, section.outerHeight());\r\n\r\n                let speedX = p.random(-1.5, 1.5);\r\n                let speedY = p.random(-1.5, 1.5);\r\n\r\n                if (speedX == 0) {\r\n                    speedX = 1;\r\n                }\r\n\r\n                if (speedY == 0) {\r\n                    speedY = 1;\r\n                }\r\n\r\n                numbers[i] = new Text(i, x, y, objSize, speedX, speedY);\r\n            }\r\n\r\n            p.frameRate(60);\r\n        }\r\n\r\n        p.draw = () => {\r\n\r\n            p.background(255);\r\n\r\n            if (img != null) {\r\n                bgimg.update();\r\n                bgimg.draw();\r\n            }\r\n            \r\n            \r\n\r\n\r\n\r\n            p.strokeWeight(4);\r\n            p.stroke(156, 205, 207);\r\n\r\n            // Numbers\r\n            for (let i = 0; i < numbers.length; i++) {\r\n                const number = numbers[i];\r\n\r\n                number.update();\r\n                number.draw();\r\n\r\n                // p.fill(0, 255,0);\r\n                // p.ellipse(number.x, number.y, 5, 5);\r\n            }\r\n\r\n            // Circles\r\n            for (let i = 0; i < circles.length; i++) {\r\n\r\n                let overlapping = false;\r\n\r\n                circles[i].noFill();\r\n\r\n                circles[i].update();\r\n                circles[i].draw();\r\n\r\n                for (let other = 0; other < circles.length; other++) {\r\n                    if (i != other && circles[i].intersectCircle(circles[other])) {\r\n                        overlapping = true;\r\n                    }\r\n\r\n                }\r\n\r\n                if (overlapping) {\r\n                    circles[i].stroke([0, 98, 255]);\r\n\r\n                } else {\r\n                    circles[i].stroke([156, 205, 207]);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        p.windowResized = () => {\r\n\r\n            if (window.innerWidth <= 480) {\r\n                objAmount = 5;\r\n                objSize = 30;\r\n            } else {\r\n                objAmount = 10;\r\n                objSize = 50;\r\n            }\r\n\r\n            rightWall = {\r\n                pos: {\r\n                    x: section.outerWidth() / 2,\r\n                    y: 0\r\n                },\r\n                size: {\r\n                    width: section.outerWidth() / 2\r\n                }\r\n\r\n            };\r\n\r\n            if (window.innerWidth <= 480) {\r\n                BrainImg.width = 200;\r\n                BrainImg.height = 170;\r\n            } else {\r\n                BrainImg.width = 500;\r\n                BrainImg.height = 430;\r\n            }\r\n\r\n            if (window.innerWidth >= 1200) {\r\n                BrainImg.width = 700;\r\n                BrainImg.height = 630;\r\n            }\r\n\r\n            p.resizeCanvas(section.outerWidth(), section.outerHeight());\r\n        }\r\n\r\n        class Text {\r\n            constructor(text, x, y, size, speedX = 2, speedY = 2) {\r\n                this.text = text;\r\n\r\n                this.x = x + 50;\r\n                this.y = y + 50;\r\n\r\n                this.size = size;\r\n\r\n                this.speedX = speedX;\r\n                this.speedY = speedY;\r\n\r\n                this.fillColor = [156, 205, 207];\r\n            }\r\n\r\n            draw() {\r\n                p.noStroke();\r\n\r\n                p.fill(this.fillColor);\r\n                p.textSize(this.size);\r\n                p.text(this.text, this.x, this.y);\r\n\r\n            }\r\n\r\n            update() {\r\n                this.x += this.speedX;\r\n                this.y += this.speedY;\r\n\r\n                this.intersectWall();\r\n            }\r\n\r\n            intersectWall() {\r\n                if (this.x >= rightWall.pos.x - (this.size / 2)) {\r\n                    this.x = rightWall.pos.x - (this.size / 2);\r\n                    this.speedX *= -1;\r\n                }\r\n\r\n                if (this.x <= 0) {\r\n                    this.x = 0;\r\n                    this.speedX *= -1;\r\n\r\n                    // this.fillColor = [255, 0, 0];\r\n                }\r\n\r\n                if (this.y >= p.height) {\r\n                    this.y = p.height;\r\n                    this.speedY *= -1;\r\n                }\r\n\r\n                if (this.y - this.size <= 0) {\r\n                    this.y = this.size;\r\n                    this.speedY *= -1;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        class Circle {\r\n            constructor(x, y, size, speedX = 2, speedY = 2) {\r\n                this.x = x + 50;\r\n                this.y = y + 50;\r\n\r\n                this.size = size;\r\n\r\n                this.speedX = speedX;\r\n                this.speedY = speedY;\r\n\r\n                this.fillColor = 0;\r\n                this.strokeColor = 0;\r\n            }\r\n\r\n            draw() {\r\n                p.stroke(this.strokeColor);\r\n                if (this.noFill) {\r\n                    p.noFill();\r\n                } else {\r\n                    p.fill(this.fillColor);\r\n                }\r\n\r\n                p.ellipse(this.x, this.y, this.size, this.size);\r\n\r\n            }\r\n\r\n            update() {\r\n                this.x += this.speedX;\r\n                this.y += this.speedY;\r\n\r\n                this.intersectWall();\r\n            }\r\n\r\n            noFill(b) {\r\n                return b;\r\n            }\r\n\r\n            fill(color) {\r\n                this.fillColor = color;\r\n            }\r\n\r\n            stroke(color) {\r\n                this.strokeColor = color;\r\n            }\r\n\r\n            intersectCircle(other) {\r\n                let d = p.dist(this.x, this.y, other.x, other.y);\r\n                let fd = (this.size / 2) + (other.size / 2);\r\n\r\n                return d < fd;\r\n            }\r\n\r\n            intersectWall() {\r\n                if (this.x >= p.width - (this.size / 2)) {\r\n                    this.x = p.width - (this.size / 2);\r\n                    this.speedX = this.speedX * -1;\r\n                }\r\n\r\n                if (this.x <= rightWall.pos.x + (this.size / 2)) {\r\n                    this.x = rightWall.pos.x + this.size / 2;\r\n                    this.speedX = this.speedX * -1;\r\n                }\r\n\r\n                if (this.y >= p.height - (this.size / 2)) {\r\n                    this.y = p.height - (this.size / 2);\r\n                    this.speedY = this.speedY * -1;\r\n                }\r\n\r\n                if (this.y <= this.size / 2) {\r\n                    this.y = this.size / 2;\r\n                    this.speedY = this.speedY * -1;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        class BrainImg {\r\n            constructor(img, x, y, width, height) {\r\n                this.img = p.loadImage(img);\r\n\r\n                this.x = x;\r\n                this.y = y;\r\n\r\n                this.width = width;\r\n                this.height = height;\r\n            }\r\n\r\n            draw() {\r\n                p.image(this.img, this.x, this.y, this.width, this.height);\r\n                // console.log(this.img);\r\n                \r\n            }\r\n\r\n            update() {\r\n                this.x = (p.width / 2) - (this.width / 2);\r\n                this.y = (p.height / 2) - (this.height / 2);\r\n            }\r\n\r\n            followY(targetY, speedY) {\r\n                if (this.y < targetY) {\r\n                    this.y += speedY;\r\n                }\r\n\r\n                if (this.y > targetY) {\r\n                    this.y -= speedY;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\nconst sectionWork = document.querySelector('section#work');\r\nconst workArticles = document.querySelectorAll('section#work article');\r\n\r\n$('.contact-btn').on('click', function () {\r\n    $('html, body').animate({\r\n        scrollTop: $('html').height()\r\n    }, 800, function () {\r\n        // window.location.hash = '';\r\n    });\r\n});\r\n\n// work sketch\r\n\r\nlet aboutSection = $('section#about');\r\nlet skillSection = $('section#skill');\r\n\r\nif (aboutSection.length) {\r\n    let showAboutSketch = new NoiseSketch(aboutSection, '/img/particles.jpg').sketch;\r\n\r\n    let showAboutSketch2 = new p5(showAboutSketch, 'about');\r\n}\r\n\r\n\r\nif (skillSection.length) {\r\n\r\n    let objTotal = 7;\r\n\r\n    if($(window).width() < 960){\r\n        objTotal = 4;\r\n        \r\n    }\r\n\r\n    let test = new BubbleAndNum(skillSection, 7, '/img/white-brain.jpg');\r\n\r\n    let skillSectionSketch2 = new p5(test.sketch, 'skill');\r\n}\r\n\r\n\n\r\nconst workSection = $('section#work');\r\nconst workWrapper = $('.work-wrapper');\r\nconst group = $('.work-group');\r\nconst workPaginator = $('.work-paginator');\r\n\r\nlet groupLength = workWrapper.children().length;\r\nlet visible = 1;\r\nlet index = 0;\r\nlet endIndex = (group.length / visible) - 1;\r\nlet active = true;\r\n\r\n\r\n\r\n\r\n\r\nfor (let i = 0; i < groupLength; i++) {\r\n    $('.work-paginator ul')\r\n    .append(`\r\n    <li><a>${i + 1}</a></li>\r\n    `);\r\n}\r\n\r\n    workPaginator.css('top', `-${(workSection.height() / 2) - 70}px`);\r\n\r\n    $(window).resize(function(){\r\n        workPaginator.css('top', `-${(workSection.height() / 2) - 70}px`);\r\n    })\r\n\r\n    updatePaginatorNumbers(1);  \r\n\r\n    $('.work-paginator ul li').click(function () {\r\n        updatePaginatorNumbers($(this).index() + 1);\r\n        \r\n        index = $(this).index();\r\n        leftWork(`-${group.width() * (index)}px`);\r\n\r\n    });\r\n    \r\n\r\n    $('.work-paginator .icon-arrow-left').click(() => {\r\n\r\n        if (active) {\r\n            active = false;\r\n\r\n            if (index > 0) {\r\n                previousWork();\r\n            } else {\r\n                endWork();\r\n            }\r\n\r\n            window.setTimeout(function () {\r\n                active = true;\r\n            }, 300);\r\n        }\r\n\r\n        \r\n\r\n        updatePaginatorNumbers(index + 1);\r\n    });\r\n\r\n    $('.work-paginator .icon-arrow-right').click(() => {\r\n\r\n\r\n        if (active) {\r\n            active = false;\r\n            if (index < endIndex) {\r\n                nextWork();\r\n            } else {\r\n                startWork();\r\n            }\r\n\r\n            window.setTimeout(function () {\r\n                active = true;\r\n            }, 300);\r\n        }\r\n        \r\n\r\n        updatePaginatorNumbers(index + 1);\r\n    });\r\n\r\n    function leftWork(pos) {\r\n        group.css({ 'left': pos });\r\n        \r\n    }\r\n\r\n    function previousWork() {\r\n        index--;\r\n        group.css({ 'left': `+=${group.width()}` });\r\n    }\r\n\r\n    function nextWork() {\r\n       \r\n        index++;\r\n        group.css({ 'left': `-=${group.width()}` });  \r\n \r\n    }\r\n\r\n    function startWork() {\r\n        index = 0;\r\n        group.css({ 'left': '0px' });\r\n    }\r\n\r\n    function endWork() {\r\n        index = endIndex;\r\n        group.css({ 'left': `-${group.width() * (groupLength - 1)}px` });\r\n        \r\n    }\r\n\r\n    function updatePaginatorNumbers(i) {\r\n        const num = $(`.work-paginator ul li:nth-child(${i})`);\r\n\r\n        $('.work-paginator ul li').removeClass('selected');\r\n\r\n        num.addClass('selected');\r\n    }\r\n\r\n\r\n\n// work sketch\r\n\r\nlet firstSectionWork = $('section#first');\r\nlet postContentSection = $('section#post-content');\r\n\r\n\r\n\r\n\r\nif (firstSectionWork.length) {\r\n    let showFirstSketch = new NoiseSketch(firstSectionWork, '/img/particles.jpg').sketch;\r\n\r\n    let showFirstSketch2 = new p5(showFirstSketch, 'first');\r\n}\r\n\r\nif (postContentSection.length && $(window).width() > 960) {\r\n\r\n    let objTotal = 10;\r\n\r\n    let test = new BubbleAndNum(postContentSection, objTotal);\r\n    \r\n    // let showPostSketch2 = new p5(test.sketch, 'post-content');\r\n}\r\n\r\n\n"]}